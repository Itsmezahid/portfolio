/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const Wizard = React.memo(function Wizard(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF("/models/wizard-transformed.glb");

  const modelRef = useRef();

  useFrame((state) => {
    modelRef.current.position.y =
      -1.5 + Math.sin(state.clock.elapsedTime) * 0.15;
  });

  return (
    <group
      {...props}
      dispose={null}
      ref={modelRef}
      position={[0, -1.5, 0]}
      scale={[0.06, 0.06, 0.06]}
      rotation={[0.25, 0, 0]}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.WandpCylinder1_Wandq_0.geometry}
        material={materials.PaletteMaterial001}
        position={[-1.057, 0, 0]}
        rotation={[0, 0.224, 0]}
        scale={0.832}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.z_obj.geometry}
        material={materials['9_meshes_Merge']}
        scale={0.28}
      />
    </group>
  );
});

export default Wizard;
useGLTF.preload("/models/wizard-transformed.glb");
